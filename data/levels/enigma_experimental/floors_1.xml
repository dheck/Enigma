<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
  <el:protected>
    <el:info el:type="level">
      <el:identity el:title="All Floors as of Enigma 1.10" el:subtitle="" el:id="floors"/>
      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
      <el:author  el:name="Raoul Bourquin" el:email=""/>
      <el:copyright>Copyright Â© 2009 Raoul Bourquin</el:copyright>
      <el:license el:type="GPL v2.0 or above" el:open="true"/>
      <el:compatibility el:enigma="1.10"/>
      <el:modes el:easy="false" el:single="true" el:network="true"/>
      <el:score el:easy="-" el:difficult="-"/>
    </el:info>
    <el:luamain><![CDATA[
local floors = {
{"fl_aquamarine", _text="fl_aquamarine"},
{"fl_aquamarine_framed", _text="fl_aquamarine_framed"},
{"fl_bast", _text="fl_bast"},
{"fl_bast_framed", _text="fl_bast_framed"},
{"fl_bluegray", _text="fl_bluegray"},
{"fl_bluegray_framed", _text="fl_bluegray_framed"},
{"fl_bluegreen", _text="fl_bluegreen"},
{"fl_bluegreen_framed", _text="fl_bluegreen_framed"},
{"fl_brick", _text="fl_brick"},
{"fl_brick_framed", _text="fl_brick_framed"},
{"fl_concrete", _text="fl_concrete"},
{"fl_concrete_framed", _text="fl_concrete_framed"},
{"fl_dunes", _text="fl_dunes"},
{"fl_dunes_framed", _text="fl_dunes_framed"},
{"fl_gravel", _text="fl_gravel"},
{"fl_gravel_framed", _text="fl_gravel_framed"},
{"fl_gray", _text="fl_gray"},
{"fl_gray_framed", _text="fl_gray_framed"},
{"fl_himalaya", _text="fl_himalaya"},
{"fl_himalaya_framed", _text="fl_himalaya_framed"},
{"fl_pinkbumps", _text="fl_pinkbumps"},
{"fl_pinkbumps_framed", _text="fl_pinkbumps_framed"},
{"fl_sahara", _text="fl_sahara"},
{"fl_sahara_framed", _text="fl_sahara_framed"},
{"fl_sand", _text="fl_sand"},
{"fl_sand_framed", _text="fl_sand_framed"},

{"fl_bridge", _text="fl_bridge, default"},
{"fl_bridge", state=OPEN, _text="fl_bridge, state=OPEN"},
{"fl_bridge", state=CLOSED, _text="fl_bridge, state=CLOSED"},
{"fl_bridge", state=CLOSED, flavor="gc", _text="fl_bridge, flavor=\"gc\", state=CLOSED"},
{"fl_bridge", state=CLOSED, flavor="bw", _text="fl_bridge, flavor=\"bw\", state=CLOSED"},
{"fl_bridge", state=CLOSED, flavor="bn", _text="fl_bridge, flavor=\"bn\", state=CLOSED"},

{"fl_slope", _text="fl_slope, default"},
{"fl_slope", slope=WEST, shape="pw", _text="fl_slope, slope=WEST, shape=\"pw\""},
{"fl_slope", slope=SOUTH, shape="ps", _text="fl_slope, slope=SOUTH, shape=\"ps\""},
{"fl_slope", slope=EAST, shape="pe", _text="fl_slope, slope=EAST, shape=\"pe\""},
{"fl_slope", slope=NORTH, shape="pn", _text="fl_slope, slope=NORTH, shape=\"pn\""},
{"fl_slope", slope=NORTHWEST, shape="inw", _text="fl_slope, slope=NORTHWEST, shape=\"inw\""},
{"fl_slope", slope=SOUTHWEST, shape="isw", _text="fl_slope, slope=SOUTHWEST, shape=\"isw\""},
{"fl_slope", slope=SOUTHEAST, shape="ise", _text="fl_slope, slope=SOUTHEAST, shape=\"ise\""},
{"fl_slope", slope=NORTHEAST, shape="ine", _text="fl_slope, slope=NORTHEAST, shape=\"ine\""},
{"fl_slope", slope=NORTHWEST, shape="onw", _text="fl_slope, slope=NORTHWEST, shape=\"onw\""},
{"fl_slope", slope=SOUTHWEST, shape="osw", _text="fl_slope, slope=SOUTHWEST, shape=\"osw\""},
{"fl_slope", slope=SOUTHEAST, shape="ose", _text="fl_slope, slope=SOUTHEAST, shape=\"ose\""},
{"fl_slope", slope=NORTHEAST, shape="one", _text="fl_slope, slope=NORTHEAST, shape=\"one\""},
{"fl_slope", slope=WEST, shape="tw", _text="fl_slope, slope=WEST, shape=\"tw\""},
{"fl_slope", slope=SOUTH, shape="ts", _text="fl_slope, slope=SOUTH, shape=\"ts\""},
{"fl_slope", slope=EAST, shape="te", _text="fl_slope, slope=EAST, shape=\"te\""},
{"fl_slope", slope=NORTH, shape="tn", _text="fl_slope, slope=NORTH, shape=\"tn\""},
{"fl_slope", slope=NORTHWEST, shape="twl", _text="fl_slope, slope=NORTHWEST, shape=\"twl\""},
{"fl_slope", slope=SOUTHWEST, shape="tsl", _text="fl_slope, slope=SOUTHWEST, shape=\"tsl\""},
{"fl_slope", slope=SOUTHEAST, shape="tel", _text="fl_slope, slope=SOUTHEAST, shape=\"tel\""},
{"fl_slope", slope=NORTHEAST, shape="tnl", _text="fl_slope, slope=NORTHEAST, shape=\"tnl\""},
{"fl_slope", slope=SOUTHWEST, shape="twr", _text="fl_slope, slope=SOUTHWEST, shape=\"twr\""},
{"fl_slope", slope=SOUTHEAST, shape="tsr", _text="fl_slope, slope=SOUTHEAST, shape=\"tsr\""},
{"fl_slope", slope=NORTHEAST, shape="ter", _text="fl_slope, slope=NORTHEAST, shape=\"ter\""},
{"fl_slope", slope=NORTHWEST, shape="tnr", _text="fl_slope, slope=NORTHWEST, shape=\"tnr\""},

{"fl_thief", _text="fl_thief"}

}


ti[" "] = {"fl_sahara"}
ti["#"] = {"st_rawglass"}
ti["S"] = {"st_switch", target="set_floor"}
ti["x"] = {"st_brake", name="here"}

wo(ti, " ", 12+#floors, 13)
wo:drawBorder(po(0, 0), wo["Width"], wo["Height"], ti["#"])
wo[{1,1}] = {"#ac_marble_black"}
wo[{1,2}] = {"#ac_marble_white"}
wo[{1,3}] = ti["x"]

for i=1, #floors do
    wo[po(5+i, 1)] = ti["S"]
    wo[po(5+i, 2)] = {"it_document", text=floors[i]["_text"]}
    wo[po(5+i, 5)] = floors[i]
    wo[po(5+i, 6)] = floors[i]
    wo[po(5+i, 7)] = floors[i]
    wo[po(5+i, 8)] = floors[i]
    wo[po(5+i, 9)] = floors[i]
end

-- Floortile express worldwide:
function set_floor(value, sender)
    wo[po(sender) + po(0, 1)] = {"it_document", text=floors[sender.x-5]["_text"]}
    if no["here"]:exists() then
        wo[no["here"]] = floors[sender.x-5]
    end
end
 ]]></el:luamain>
    <el:i18n>
      <el:string el:key="title">
        <el:english el:translate="false"/>
      </el:string>
    </el:i18n>
  </el:protected>
</el:level>

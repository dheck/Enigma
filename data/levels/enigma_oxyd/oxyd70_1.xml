<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
  <el:protected>
    <el:info el:type="level">
      <el:identity el:title="Oxyd 70" el:subtitle="Oxyd 70" el:id="oxyd70"/>
      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
      <el:author  el:name="Raoul Bourquin" el:email="" el:homepage=""/>
      <el:copyright>Copyright Â© 2005 Raoul Bourquin</el:copyright>
      <el:license el:type="GPL v2.0 or above" el:open="true"/>
      <el:compatibility el:enigma="1.00" el:engine="oxyd1">
       <el:dependency el:path="lib/libpuzzle_2" el:id="lib/libpuzzle" el:release="2" el:preload="true"/>
      </el:compatibility>
      <el:modes el:easy="false" el:single="true" el:network="false"/>
      <el:comments>
        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
      </el:comments>
      <el:score el:easy="-" el:difficult="1:54"/>
    </el:info>
    <el:luamain><![CDATA[
-- GENERAL --
levelw = 20
levelh = 25

create_world(levelw, levelh)

function renderLine( line, pattern)
    for i=1, strlen(pattern) do
        local c = strsub( pattern, i, i)
          if c=="o" then
            set_item("it-hollow",i-1,line)
            set_floor("fl-brick",i-1,line)
                elseif c=="#" then
                        set_stone("st-metal",i-1,line)
                elseif c=="H" then
                        set_stone("st-metal_hole",i-1,line)
                elseif c==" " then
                        set_floor("fl-brick",i-1,line)

                elseif c=="a" then
                        set_stone("st-bigbrick-sw",i-1,line)
                elseif c=="b" then
                        set_stone("st-bigbrick-nw",i-1,line)
                elseif c=="c" then
                        set_stone("st-bigbrick-ne",i-1,line)
                elseif c=="d" then
                        set_stone("st-bigbrick-es",i-1,line)

                elseif c=="s" then
            set_floor("fl-abyss_fake",i-1,line)
        end
    end    
end

renderLine(00 , "ssssssssssssssssssss")
renderLine(01 , "ssssssssssssssssssss")
renderLine(02 , "####################")
renderLine(03 , "#                  #")
renderLine(04 , "#                  #")
renderLine(05 , "#     da da da     #")
renderLine(06 , "#     cb cb cb     #")
renderLine(07 , "#       o  o       #")
renderLine(08 , "#     da da da     #")
renderLine(09 , "#     cb cb cb     #")
renderLine(10 , "#                  #")
renderLine(11 , "#                  #")
renderLine(12 , "####H##########H####")
renderLine(13 , "#                  #")
renderLine(14 , "#                  #")
renderLine(15 , "#     da da da     #")
renderLine(16 , "#     cb cb cb     #")
renderLine(17 , "#       o  o       #")
renderLine(18 , "#     da da da     #")
renderLine(19 , "#     cb cb cb     #")
renderLine(20 , "#                  #")
renderLine(21 , "#                  #")
renderLine(22 , "####################")
renderLine(23 , "ssssssssssssssssssss")
renderLine(24 , "ssssssssssssssssssss")

-- Special
set_actor("ac-whiteball-small", 10,4.5, {player=0})
set_actor("ac-whiteball-small", 10,10.5, {player=0})  

set_actor("ac-whiteball-small", 10,14.5, {player=0})
set_actor("ac-whiteball-small", 10,20.5, {player=0})  

puzzle({"  #  #  ",
        "  #  #  ",
        "########",
        "  #  #  ",
        "  #  #  "},{6,5},"redpuzzle","permutation")

puzzle({"  #  #  ",
        "  #  #  ",
        "########",
        "  #  #  ",
        "  #  #  "},{6,15},"redpuzzle","none")
    ]]></el:luamain>
    <el:i18n>
      <el:string el:key="title">
        <el:english el:translate="false"/>
      </el:string>
    </el:i18n>
  </el:protected>
</el:level>

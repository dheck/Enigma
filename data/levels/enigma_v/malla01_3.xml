<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
  <el:protected>
    <el:info el:type="level">
      <el:identity el:title="Pneumatic Delivery" el:subtitle="" el:id="malla01"/>
      <el:version el:score="2" el:release="3" el:revision="4" el:status="released"/>
      <el:author  el:name="Manuel König" el:email="" el:homepage=""/>
      <el:copyright>Copyright © 2004 Manuel König</el:copyright>
      <el:license el:type="GPL v2.0 or above" el:open="true"/>
      <el:compatibility el:enigma="1.10">
        <el:dependency el:path="lib/libpuzzle" el:id="lib/libpuzzle" el:release="3" el:preload="true"/>
      </el:compatibility>
      <el:modes el:easy="true" el:single="true" el:network="true"/>
      <el:comments><el:code>New API converted by /dev/null</el:code></el:comments>
      <el:score el:easy="-" el:difficult="-"/>
    </el:info>
    <el:luamain><![CDATA[
ti["##"] = {"st_tigris"}
ti["  "] = {"fl_wood"}
ti[".."] = {"fl_abyss"}
ti["~~"] = {"fl_water"}
ti["=="] = {"st_invisible_hollow"}
ti["XX"] = {"st_portal"}
ti["SI"] = {"st_stoneimpulse"}
ti["RR"] = {"st_rotator", movable = true, counterclock = true}
ti["CC"] = {"st_break_oxydc"}
ti["KK"] = {"st_knight"}
ti["WW"] = {"st_box"}
ti["gg"] = {"st_grate_framed"}
ti["pb"] = {"st_passage_black_frame"}
ti["pw"] = {"st_passage_white_frame"}
ti["p^"] = {"it_puller_n"}
ti["p>"] = {"it_puller_e"}
ti["pv"] = {"it_puller_s"}
ti["TT"] = ti[".."] .. {"st_turnstile", flavor = "red"}
ti["T^"] = ti[".."] .. {"st_turnstilearm", orientation = NORTH}
ti["t>"] = ti["  "] .. {"st_turnstilearm", orientation = EAST}
ti["T>"] = ti[".."] .. {"st_turnstilearm", orientation = EAST}
ti["Tv"] = ti[".."] .. {"st_turnstilearm", orientation = SOUTH}
ti["t<"] = ti["  "] .. {"st_turnstilearm", orientation = WEST}
ti["T<"] = ti[".."] .. {"st_turnstilearm", orientation = WEST}
ti["ss"] = {"st_shogun_s"} .. ti({"it_shogun_l", target = "door3"})
ti["sm"] = {"st_shogun_m"}
ti["sl"] = {"st_shogun_l"}
ti["d1"] = {"st_door", "door1", faces = "ew"}
ti["d2"] = {"st_door", "door2", faces = "ns"}
ti["d3"] = {"st_door", "door3", faces = "ew"}
ti["mn"] = {"st_mail_n"}
ti["me"] = {"st_mail_e"}
ti["ms"] = {"st_mail_s"}
ti["m8"] = {"it_pipe_ns"}
ti["m6"] = {"it_pipe_ew"}
ti["m1"] = {"it_pipe_ne"}
ti["m9"] = {"it_pipe_sw"}
ti["t1"] = {"it_trigger", "trigger1", target = "toggleDoor1", action = "signal"}
ti["Sb"] = {"st_switch_black", target = "stoneDoor"}
ti["Sw"] = {"st_switch_white", target = "laser"}
ti["4S"] = {"st_fourswitch", target = "mirrorMb"}
ti["LL"] = {"st_laser", "laser", orientation = EAST, state = off}
ti["LS"] = {"st_laserswitch", target = "toggleDoor2", action = "signal"}
ti["M/"] = {"st_mirror_slab", "mirrorMb", movable = false, transparent = false, orientation = EAST}
ti["M-"] = {"st_mirror_slab", movable = true, transparent = false, orientation = SOUTH}
ti["Mb"] = {"st_mirror_slab", movable = false, transparent = false, orientation = WEST}
ti["//"] = {"st_mirror_slab", movable = false, transparent = true, orientation = EAST}
ti["Mv"] = {"st_mirror_triangle", movable = false, transparent = false, orientation = SOUTH}
ti["M<"] = {"st_mirror_triangle", movable = false, transparent = false, orientation = WEST}
ti["h "] = {"it_hammer"}
ti["%%"] = {"it_document", text = "text1"}
ti["$$"] = {"st_tigris", "doorTigris"}
ti["OO"] = {"st_oxyd", flavor = "d"}
ti["@@"] = {"#ac_marble_black"}
ti["**"] = {"#ac_marble_white"}
ti["?"] = {"st_puzzle_yellow"}
ti["!"] = ti["~~"] .. {"st_puzzle_yellow"}

local resolver  =  res.puzzle(ti, "?", "!")

if wo["IsDifficult"] then
    wo(resolver, "  ", {
        "##############################################################################",
        "##  LS            Mv    LS##        LSXXM/XX                  $$      ##Sbm6##",
        "##                        ##          XXXXXX          ####  WW  t1WW  ####m9##",
        "##LL              //      gg          XX  @@  M-      ##  WWt1  t1##    d1m8##",
        "##                        ##    ==?1==pb      ##########  ######  ##    ##%%##",
        "##  Mb            M<    LS##!1!1!1!1  ##    p^me....####          ##    ##KK##",
        "##CC########################  ?1m1!1  ##mn######T<TTT>##########ms########OO##",
        "##d2####  gg  ##    ~~~~sl##  ?1m8!1  ##    ##    ..  ..................######",
        "##m8p>##  ss  SI    RR    gg  ?1?1!1!1##  **##  T^..  t<TT....  ..  t<TTt>####",
        "##pv######SI  ##sm##  ##  gg==?1==    ##    ....TT....  ..  ..T<TT..  ..    ##",
        "##p^##m6h SI      gg  ##  gg          pw    T^  Tv..##T<TTT>TT  ......##    ##",
        "##OO4Sm6m1d3      gg      ##          ##SwOOTT  ######....  Tvpv  ....####KK##",
        "##########################################################################OO##"})
else
    wo(resolver, "  ", {
        "##############################################################################",
        "##  LS            Mv    LS##        LSXXM/XX                  $$      ##Sb  ##",
        "##                        ##          XXXXXX          ####  WW  t1WW  ####  ##",
        "##LL              //      gg          XX  @@  M-      ##  WWt1  t1##    d1m1##",
        "##                        ##          pb              ##  ######  ##    ##%%##",
        "##  Mb            M<    LS##!1!1!1!1  ##              ##          ##    ##  ##",
        "##  ########################  ?1m8!1  ##mn########ms############ms########OO##",
        "##d2####  gg  ##    ~~~~  ##  ?1  !1  ##    ##          ................######",
        "##  p>##  ss  SI          gg  ?1?1!1!1##  **##  T^..  t<TT....  ..  t<TTt>####",
        "##  ######SI  ##sm##  ##  gg          ##    ##..TT....  ..  ..T<TT    ..    ##",
        "##p^##m6  SI      gg  ##slgg          pw    T^  Tv..##T<TTT>TT  ......##    ##",
        "##OO4S    d3      gg      ##          ##SwOOTT  ######....  Tvpv  ....####  ##",
        "##########################################################################OO##"})
end

wo:add({"ot_counter", "toggleDoor1", state = 0, target="door1", action_3="open", action_2="close"})
wo:add({"ot_counter", "toggleDoor2", state = 0, target="door2", action_4="open", action_3="close"})
wo:shuffleOxyd()

function stoneDoor(value, sender)
    if value == true then
        wo[no["doorTigris"]] = {"st_grate_framed", "doorTigris"}
    else
        wo[no["doorTigris"]] = ti["$$"]
    end
end
 ]]></el:luamain>
    <el:i18n>
      <el:string el:key="title">
        <el:english el:translate = "false"/>
      </el:string>
      <el:string el:key="text1">
        <el:english el:translate="true">This is my first landscape, dedicated to my father. I hope you'll enjoy it!</el:english>
        <el:translation el:lang="de">Das ist mein erstes Level; ich habe es meinem Vater gewidmet. Ich hoffe, dass es euch Spaß macht!</el:translation>
      </el:string>
    </el:i18n>
  </el:protected>
</el:level>

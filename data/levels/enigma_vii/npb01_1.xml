<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
    <el:protected >
        <el:info el:type="level">
            <el:identity el:title="Inkblot 1" el:id="20070519npb015045"/>
            <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
            <el:author el:name="Nathan Bronecke" el:email="npb-engimalevel@rbepan.net" el:homepage="" />
            <el:copyright>Copyright Â© 2007 Nathan Bronecke</el:copyright>
            <el:license el:type="GPL v2.0 or above" el:open="true"/>
            <el:compatibility el:enigma="1.0"/>
            <el:modes el:easy="true" el:single="true" el:network="true"/>
            <el:score el:easy="0:17" el:difficult="0:29"/>
        </el:info>
        <el:luamain><![CDATA[
-- updated: 2007-06-03

levelw = 20
levelh = 13

CreateWorld(levelw, levelh)

-- light blue
oxyd_default_flavor = "c"

-- default swamp sink too easy
if difficult then
    enigma.SwampSinkSpeed = enigma.SwampSinkSpeed * 2;
else
    enigma.SwampSinkSpeed = enigma.SwampSinkSpeed * 1.5;
end

fill_floor("fl-leaves", 0,0, levelw,levelh)

function renderLine(y, pattern)
    for x=0, strlen(pattern)-1 do
        local c = string.sub(pattern, x+1, x+1)
        if c==' ' then
            -- default grass

        -- water/swamp
        elseif c=='.' then
            set_floor("fl-water", x,y)
        elseif c=='s' then
            set_floor("fl-swamp", x,y)

        -- only single color may pass
        elseif c=='b' then
            set_stone("st-black4", x,y)
        elseif c=='w' then
            set_stone("st-white4", x,y)
        elseif c=='B' then
            set_floor("fl-swamp", x,y)
            if difficult then
                set_stone("st-black4", x,y)
            end
        elseif c=='W' then
            set_floor("fl-swamp", x,y)
            if difficult then
                set_stone("st-white4", x,y)
            end
        elseif c==')' then
            set_floor("fl-swamp", x,y)
            set_stone("st-white4", x,y)
        elseif c=='(' then
            set_floor("fl-swamp", x,y)
            set_stone("st-black4", x,y)
        elseif c=='}' then
            if not difficult then
                set_stone("st-white4", x,y)
            end
        elseif c=='{' then
            if not difficult then
                set_stone("st-black4", x,y)
            end

        -- oxyd
        elseif c=='O' then
            oxyd(x,y)
        elseif c=='o' then
            -- visual change only when using certain non-standard graphics
            set_floor("fl-swamp", x,y)
            oxyd(x,y)

        -- miscellaneous
        elseif c=='#' then
            set_stone("st-camouflage", x,y)
        elseif c=='y' then
            set_item("it-yinyang", x,y)
        elseif c=='Y' then
            set_floor("fl-swamp", x,y)
            set_stone("st-yinyang1", x,y)

        -- players
        elseif c=='1' then
            set_actor("ac-blackball", x+.5,y+.5, {player=0, essential=-1})
        elseif c=='2' then
            set_actor("ac-whiteball", x+.5,y+.5, {player=1, essential=-1})

        end
    end
end

-- level sort of looks like a butterfly
--              01234567890123456789
renderLine( 0, "....................")
renderLine( 1, ".oBsssss....sssssWo.")
renderLine( 2, ".B{  #y#s..s#y#  }W.")
renderLine( 3, ".s    #bssssw#    s.")
renderLine( 4, ".s     bssssw     s.")
renderLine( 5, ".WO    bs..sw    OB.")
renderLine( 6, "Oss)sssYs..sYsss(ssO")
renderLine( 7, ".WO    ws..sb    OB.")
renderLine( 8, ".s     wssssb     s.")
renderLine( 9, ".s    #wssssb#    s.")
renderLine(10, ".W}  #1#s..s#2#  {B.")
renderLine(11, ".oWsssss....sssssBo.")
renderLine(12, "....................")

oxyd_shuffle()

]]></el:luamain>
        <el:i18n>
            <el:string el:key="title">
                <el:english el:translate="true" el:comment="the common name of the Rorschach test is inkblot test; this title just refers to the level's visual appearance"/>
            </el:string>
        </el:i18n>
    </el:protected>
</el:level>

<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
  <el:protected>
    <el:info el:type="level">
      <el:identity el:title="Action Potential" el:subtitle="" el:id="pulley02"/>
      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
      <el:author  el:name="Mark Pulley" el:email="" el:homepage=""/>
      <el:copyright>Copyright Â© 2007 Mark Pulley</el:copyright>
      <el:license el:type="GPL v2.0 or above" el:open="true"/>
      <el:compatibility el:enigma="1.00">
       <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
      </el:compatibility>
      <el:modes el:easy="true" el:single="true" el:network="false"/>
      <el:score el:easy="2:45" el:difficult="7:29"/>
    </el:info>
    <el:luamain><![CDATA[
function file_oxyd(x,y,f)
    oxyd_default_flavor=f
    oxyd(x,y)
end

-- ANT --
create_world(58,85)

-- Floors --
cells={}
cells[" "]=cell{floor="fl-abyss_fake"}
cells["B"]=cell{floor="fl-sand"}
cells["A"]=cell{floor="fl-stwood"}
cells["C"]=cell{floor="fl-red"}


level={"                                                          ", --01
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ", --10
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ", --20
       "                       C C C C C C C                      ",
       "                    BB                                    ",
       "                    BB                                    ",
       "      C C C C C C CBB                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ", --30
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B                                     ",
       "                    B B B B B B B B                       ", --40
       "                    BBBBBBBBBBBBBBBBBB                    ",
       "                    BBBBBBBBBBBBBBBBBB                    ",
       "                    BBBBBBBBBBBBBBBBBB                    ",
       "                    BBBBBBBBBBBBBBBBBB                    ",
       "                    BBBBBBBBBBBBBBBBBB                    ",
       "                       B B B B B B B B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ", --50
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ",
       "                                     B                    ", --60
       "                                     B                    ",
       "                                     BBC C C C C C C      ",
       "                                    BB                    ",
       "                                    BB                    ",
       "                      C C C C C C C                       ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ", --70
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ", --80
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          "} --85

draw_map(0,0,level,cells)

-- Items --
cells={}
cells[" "]=cell{}
cells["A"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseA"}}}
cells["B"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseB"}}}
cells["C"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseC"}}}
cells["D"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseD"}}}
cells["E"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseE"}}}
cells["F"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseF"}}}
cells["G"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseG"}}}
cells["a"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsea"}}}
cells["b"]=cell{item={face="it-trigger",attr={action="callback",target="Synapseb"}}}
cells["c"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsec"}}}
cells["d"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsed"}}}
cells["e"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsee"}}}
cells["f"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsef"}}}
cells["g"]=cell{item={face="it-trigger",attr={action="callback",target="Synapseg"}}}

cells["H"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseH"}}}
cells["I"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseI"}}}
cells["J"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseJ"}}}
cells["K"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseK"}}}
cells["L"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseL"}}}
cells["M"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseM"}}}
cells["N"]=cell{item={face="it-trigger",attr={action="callback",target="SynapseN"}}}
cells["h"]=cell{item={face="it-trigger",attr={action="callback",target="Synapseh"}}}
cells["i"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsei"}}}
cells["j"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsej"}}}
cells["k"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsek"}}}
cells["l"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsel"}}}
cells["m"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsem"}}}
cells["n"]=cell{item={face="it-trigger",attr={action="callback",target="Synapsen"}}}

cells["O"]=cell{item={face="it-trigger",attr={action="callback",target="CornerO"}}}
cells["P"]=cell{item={face="it-trigger",attr={action="callback",target="CornerP"}}}
cells["Q"]=cell{item={face="it-trigger",attr={action="callback",target="CornerQ"}}}
cells["R"]=cell{item={face="it-trigger",attr={action="callback",target="CornerR"}}}
cells["S"]=cell{item={face="it-trigger",attr={action="callback",target="CornerS"}}}
cells["T"]=cell{item={face="it-trigger",attr={action="callback",target="CornerT"}}}
cells["U"]=cell{item={face="it-trigger",attr={action="callback",target="CornerU"}}}
cells["o"]=cell{item={face="it-trigger",attr={action="callback",target="Cornero"}}}
cells["p"]=cell{item={face="it-trigger",attr={action="callback",target="Cornerp"}}}
cells["q"]=cell{item={face="it-trigger",attr={action="callback",target="Cornerq"}}}
cells["r"]=cell{item={face="it-trigger",attr={action="callback",target="Cornerr"}}}
cells["s"]=cell{item={face="it-trigger",attr={action="callback",target="Corners"}}}
cells["t"]=cell{item={face="it-trigger",attr={action="callback",target="Cornert"}}}
cells["u"]=cell{item={face="it-trigger",attr={action="callback",target="Corneru"}}}

cells["1"]=cell{item={face="it-trigger",attr={action="callback",target="Corner1"}}}
cells["2"]=cell{item={face="it-trigger",attr={action="callback",target="Corner2"}}}
cells["3"]=cell{item={face="it-trigger",attr={action="callback",target="Corner3"}}}
cells["4"]=cell{item={face="it-trigger",attr={action="callback",target="Corner4"}}}
cells["5"]=cell{item={face="it-trigger",attr={action="callback",target="Corner5"}}}
cells["6"]=cell{item={face="it-trigger",attr={action="callback",target="Corner6"}}}
cells["7"]=cell{item={face="it-trigger",attr={action="callback",target="Corner7"}}}
cells["!"]=cell{item={face="it-trigger",attr={action="callback",target="Corner11"}}}
cells["@"]=cell{item={face="it-trigger",attr={action="callback",target="Corner22"}}}
cells["#"]=cell{item={face="it-trigger",attr={action="callback",target="Corner33"}}}
cells["$"]=cell{item={face="it-trigger",attr={action="callback",target="Corner44"}}}
cells["%"]=cell{item={face="it-trigger",attr={action="callback",target="Corner55"}}}
cells["^"]=cell{item={face="it-trigger",attr={action="callback",target="Corner66"}}}
cells["&"]=cell{item={face="it-trigger",attr={action="callback",target="Corner77"}}}

cells["x"]=cell{item={face="it-death"}}


itmap={"                                                          ", --01
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                   !                                      ",
       "                                                          ",
       "                   @                                      ", --10
       "                                                          ",
       "                   #                                      ",
       "                                                          ",
       "                   $                                      ",
       "                                                          ",
       "                   %                                      ",
       "                                                          ",
       "                   ^                                      ",
       "                                                          ",
       "                   &                                      ", --20
       "                                                          ",
       "                       A B C D E F G                      ",
       "      7 6 5 4 3 2 1                                       ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "      xxxxxxxxxxxxx                                       ",
       "                                                          ",
       "                                                          ",
       "                                                          ", --30
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                      xxxxxxxxxxxxxxxxxx                  ",
       "                                       x                  ",
       "                       a b c d e f g                      ",
       "                                                          ",
       "                                                          ", --40
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                      n m l k j i h                       ",
       "                  x                                       ",
       "                  xxxxxxxxxxxxxxxxxx                      ", --50
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                       xxxxxxxxxxxxx      ",
       "                                                          ", --60
       "                                                          ",
       "                                                          ",
       "                                       O P Q R S T U      ",
       "                      N M L K J I H                       ",
       "                                                          ",
       "                                      u                   ",
       "                                                          ",
       "                                      t                   ",
       "                                                          ",
       "                                      s                   ", --70
       "                                                          ",
       "                                      r                   ",
       "                                                          ",
       "                                      q                   ",
       "                                                          ",
       "                                      p                   ",
       "                                                          ",
       "                                      o                   ",
       "                                                          ",
       "                                                          ", --80
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          ",
       "                                                          "} --85

draw_map(0,0,itmap,cells)

-- Stones --
stones={}
stones[" "]=cell{}
stones["g"]=cell{stone="st-glass1"}
stones["."]=cell{stone="st-stoneimpulse-hollow"}
stones["o"]=cell{stone="st-stoneimpulse"}
stones["1"]=cell{stone="st-bolder-n"}
stones["2"]=cell{stone="st-bolder-s"}
stones["r"]=cell{stone="st-rotator-left"}
stones["x"]=cell{stone="st-grate1"}
stones["w"]=cell{stone="st-wood"}
stones["G"]=cell{stone="st-glass1"}
stones["O"]=cell{parent={{file_oxyd,"b"}}}

stmap={"gggggggggggggggggggggggggggggggggggggggggggggggggggggggggg", --01
       "g                                                        g",
       "g                                                        g",
       "g                                                        g",
       "g                                                        g",
       "g                                                        g",
       "g                 rgggggggggggggggggg                    g",
       "g                g  ................g                    g",
       "g               r                  .g                    g",
       "g              g    .............. .g                    g", --10
       "g             r                  . .g                    g",
       "g            g      ............ . .g                    g",
       "g           r                  . . .g                    g",
       "g          g        .......... . . .g                    g",
       "g         r                  . . . .g                    g",
       "g        g          ........ . . . .g                    g",
       "g       r                  . . . . .g                    g",
       "g      g            ...... . . . . .g                    g",
       "g     r                  . . . . . .g                    g",
       "g    g              .... . . . . . .g                    g", --20
       "g    ggggggggggggggggggwgwgwgwgwgwgwg                    g",
       "g    g1g1g1g1g1g1g1g  g g g g g g g g                    g",
       "g    g g g g g g g g  g2g2g2g2g2g2g2g                    g",
       "g    gwgwgwgwgwgwgw  gggggggggggggggggggggggggggggggg    g",
       "g    g. . . . . . .g g..............................g    g",
       "g    g. . . . . . .g g. G G G G G G G              .g    g",
       "g    g. . . . . . .g g. .......................... .g    g",
       "g    g. . . . . . .g g. . G G G G G G            . .g    g",
       "g    g. . . . . . .g g. . ...................... . .g    g",
       "g    g. . . . . . .g g. . . G G G G G          . . .g    g", --30
       "g    g. . . . . . .g g. . . .................. . . .g    g",
       "g    g. . . . . . .g g. . . . G G G G        . . . .g    g",
       "g    g. . . . . . .g g. . . . .............. . . . .g    g",
       "g    g. . . . . . .g g. . . . . G G G      . . . . .g    g",
       "g    g. . . . . . .g g. . . . . .......... . . . . .g    g",
       "g    g. . . . . . .g g. . . . . . G G    . . . . . .g    g",
       "g    g. . . . . . .g g. . . . . . ...... . . . . . .g    g",
       "g    g. . . . . . .g g. . . . . . . Ggg. . . . . . .g    g",
       "g    g. . . . . . .g goOoOoOoOoOoOoOggg. . . . . . .g    g",
       "g    g. . . . . . .g gogogogogogogogggg. . . . . . .g    g", --40
       "g    g. . . . . . .g                  x. . . . . . .     g",
       "g     . . . . . . .x                  x. . . . . . .     g",
       "g     . . . . . . .x                  x. . . . . . .     g",
       "g     . . . . . . .x                  x. . . . . . .     g",
       "g     . . . . . . .x                  g. . . . . . .g    g",
       "g    g. . . . . . .ggggogogogogogogog g. . . . . . .g    g",
       "g    g. . . . . . .gggOoOoOoOoOoOoOog g. . . . . . .g    g",
       "g    g. . . . . . .ggG . . . . . . .g g. . . . . . .g    g",
       "g    g. . . . . . ...... . . . . . .g g. . . . . . .g    g",
       "g    g. . . . . .    G G . . . . . .g g. . . . . . .g    g", --50
       "g    g. . . . . .......... . . . . .g g. . . . . . .g    g",
       "g    g. . . . .      G G G . . . . .g g. . . . . . .g    g",
       "g    g. . . . .............. . . . .g g. . . . . . .g    g",
       "g    g. . . .        G G G G . . . .g g. . . . . . .g    g",
       "g    g. . . .................. . . .g g. . . . . . .g    g",
       "g    g. . .          G G G G G . . .g g. . . . . . .g    g",
       "g    g. . ...................... . .g g. . . . . . .g    g",
       "g    g. .            G G G G G G . .g g. . . . . . .g    g",
       "g    g. .......................... .g g. . . . . . .g    g",
       "g    g.              G G G G G G G .g g. . . . . . .g    g", --60
       "g    g..............................g g. . . . . . .g    g",
       "g    gggggggggggggggggggggggggggggggg  wgwgwgwgwgwgwg    g",
       "g                    g1g1g1g1g1g1g1g  g g g g g g g g    g",
       "g                    g g g g g g g g  g2g2g2g2g2g2g2g    g",
       "g                    gw w w w w w wgggggggggggggggggg    g",
       "g                    g. . . . . . ....              g    g",
       "g                    g. . . . . .                  r     g",
       "g                    g. . . . . ......            g      g",
       "g                    g. . . . .                  r       g",
       "g                    g. . . . ........          g        g", --70
       "g                    g. . . .                  r         g",
       "g                    g. . . ..........        g          g",
       "g                    g. . .                  r           g",
       "g                    g. . ............      g            g",
       "g                    g. .                  r             g",
       "g                    g. ..............    g              g",
       "g                    g.                  r               g",
       "g                    g................  g                g",
       "g                    ggggggggggggggggggr                 g",
       "g                                                        g", --80
       "g                                                        g",
       "g                                                        g",
       "g                                                        g",
       "g                                                        g",
       "gggggggggggggggggggggggggggggggggggggggggggggggggggggggggg"} --85

draw_map(0,0,stmap,stones)

oxyd_shuffle()
set_actor("ac-blackball",29,42.5,{player=0,name="bb"})
set_item("it-document",32,43,{text="text1"})

SynapseOn = cell{floor="fl-rough-red"}
if (not difficult) then
    SynapseOff = cell{floor="fl-rough-blue"}
else
    SynapseOff = cell{floor="fl-abyss_fake"}
end
ImpulseH = cell{stone="st-stoneimpulse-hollow"}
Blocker = cell{stone="st-glass3"} -- blocks other nerves at corners

function SynapseA()
  draw_func(SynapseOn, {23,22}, {0,1}, 15)
  enigma.KillStone (23,23)
  enigma.KillStone (23,24)
end
function SynapseB()
  draw_func(SynapseOn, {25,22}, {0,1}, 15)
  enigma.KillStone (25,23)
  enigma.KillStone (25,24)
  enigma.KillStone (25,26)
end
function SynapseC()
  draw_func(SynapseOn, {27,22}, {0,1}, 15)
  enigma.KillStone (27,23)
  enigma.KillStone (27,24)
  enigma.KillStone (27,26)
  enigma.KillStone (27,28)
end
function SynapseD()
  draw_func(SynapseOn, {29,22}, {0,1}, 15)
  enigma.KillStone (29,23)
  enigma.KillStone (29,24)
  enigma.KillStone (29,26)
  enigma.KillStone (29,28)
  enigma.KillStone (29,30)
end
function SynapseE()
  draw_func(SynapseOn, {31,22}, {0,1}, 15)
  enigma.KillStone (31,23)
  enigma.KillStone (31,24)
  enigma.KillStone (31,26)
  enigma.KillStone (31,28)
  enigma.KillStone (31,30)
  enigma.KillStone (31,32)
end
function SynapseF()
  draw_func(SynapseOn, {33,22}, {0,1}, 15)
  enigma.KillStone (33,23)
  enigma.KillStone (33,24)
  enigma.KillStone (33,26)
  enigma.KillStone (33,28)
  enigma.KillStone (33,30)
  enigma.KillStone (33,32)
  enigma.KillStone (33,34)
end
function SynapseG()
  draw_func(SynapseOn, {35,22}, {0,1}, 15)
  enigma.KillStone (35,23)
  enigma.KillStone (35,24)
  enigma.KillStone (35,26)
  enigma.KillStone (35,28)
  enigma.KillStone (35,30)
  enigma.KillStone (35,32)
  enigma.KillStone (35,34)
  enigma.KillStone (35,36)
end

function Synapsea()
  draw_func(SynapseOff, {23,22}, {0,1}, 15)
  set_stone("st-glass1",23,23)
  draw_func(ImpulseH, {23,24}, {0,2}, 1)
  set_stone("st-wood",23,20)
  set_stone("st-bolder-s",23,22)
  enigma.KillStone (23,21)
  enigma.KillStone (23,37)
end
function Synapseb()
  draw_func(SynapseOff, {25,22}, {0,1}, 15)
  set_stone("st-glass1",25,23)
  draw_func(ImpulseH, {25,24}, {0,2}, 2)
  set_stone("st-wood",25,20)
  set_stone("st-bolder-s",25,22)
  enigma.KillStone (25,21)
  enigma.KillStone (25,37)
end
function Synapsec()
  draw_func(SynapseOff, {27,22}, {0,1}, 15)
  set_stone("st-glass1",27,23)
  draw_func(ImpulseH, {27,24}, {0,2}, 3)
  set_stone("st-wood",27,20)
  set_stone("st-bolder-s",27,22)
  enigma.KillStone (27,21)
  enigma.KillStone (27,37)
end
function Synapsed()
  draw_func(SynapseOff, {29,22}, {0,1}, 15)
  set_stone("st-glass1",29,23)
  draw_func(ImpulseH, {29,24}, {0,2}, 4)
  set_stone("st-wood",29,20)
  set_stone("st-bolder-s",29,22)
  enigma.KillStone (29,21)
  enigma.KillStone (29,37)
end
function Synapsee()
  draw_func(SynapseOff, {31,22}, {0,1}, 15)
  set_stone("st-glass1",31,23)
  draw_func(ImpulseH, {31,24}, {0,2}, 5)
  set_stone("st-wood",31,20)
  set_stone("st-bolder-s",31,22)
  enigma.KillStone (31,21)
  enigma.KillStone (31,37)
end
function Synapsef()
  draw_func(SynapseOff, {33,22}, {0,1}, 15)
  set_stone("st-glass1",33,23)
  draw_func(ImpulseH, {33,24}, {0,2}, 6)
  set_stone("st-wood",33,20)
  set_stone("st-bolder-s",33,22)
  enigma.KillStone (33,21)
  enigma.KillStone (33,37)
end
function Synapseg()
  draw_func(SynapseOff, {35,22}, {0,1}, 15)
  set_stone("st-glass1",35,23)
  draw_func(ImpulseH, {35,24}, {0,2}, 7)
  set_stone("st-wood",35,20)
  set_stone("st-bolder-s",35,22)
  enigma.KillStone (35,21)
  enigma.KillStone (35,37)
end

function SynapseH()
  draw_func(SynapseOn, {34,48}, {0,1}, 15)
  enigma.KillStone (34,61)
  enigma.KillStone (34,60)
end
function SynapseI()
  draw_func(SynapseOn, {32,48}, {0,1}, 15)
  enigma.KillStone (32,61)
  enigma.KillStone (32,60)
  enigma.KillStone (32,58)
end
function SynapseJ()
  draw_func(SynapseOn, {30,48}, {0,1}, 15)
  enigma.KillStone (30,61)
  enigma.KillStone (30,60)
  enigma.KillStone (30,58)
  enigma.KillStone (30,56)
end
function SynapseK()
  draw_func(SynapseOn, {28,48}, {0,1}, 15)
  enigma.KillStone (28,61)
  enigma.KillStone (28,60)
  enigma.KillStone (28,58)
  enigma.KillStone (28,56)
  enigma.KillStone (28,54)
end
function SynapseL()
  draw_func(SynapseOn, {26,48}, {0,1}, 15)
  enigma.KillStone (26,61)
  enigma.KillStone (26,60)
  enigma.KillStone (26,58)
  enigma.KillStone (26,56)
  enigma.KillStone (26,54)
  enigma.KillStone (26,52)
end
function SynapseM()
  draw_func(SynapseOn, {24,48}, {0,1}, 15)
  enigma.KillStone (24,61)
  enigma.KillStone (24,60)
  enigma.KillStone (24,58)
  enigma.KillStone (24,56)
  enigma.KillStone (24,54)
  enigma.KillStone (24,52)
  enigma.KillStone (24,50)
end
function SynapseN()
  draw_func(SynapseOn, {22,48}, {0,1}, 15)
  enigma.KillStone (22,61)
  enigma.KillStone (22,60)
  enigma.KillStone (22,58)
  enigma.KillStone (22,56)
  enigma.KillStone (22,54)
  enigma.KillStone (22,52)
  enigma.KillStone (22,50)
  enigma.KillStone (22,48)
end

function Synapseh()
  draw_func(SynapseOff, {34,48}, {0,1}, 15)
  set_stone("st-glass1",34,61)
  draw_func(ImpulseH, {34,60}, {0,2}, 1)
  set_stone("st-wood",34,64)
  set_stone("st-bolder-n",34,62)
  enigma.KillStone (34,63)
  enigma.KillStone (34,47)
end
function Synapsei()
  draw_func(SynapseOff, {32,48}, {0,1}, 15)
  set_stone("st-glass1",32,61)
  draw_func(ImpulseH, {32,58}, {0,2}, 2)
  set_stone("st-wood",32,64)
  set_stone("st-bolder-n",32,62)
  enigma.KillStone (32,63)
  enigma.KillStone (32,47)
end
function Synapsej()
  draw_func(SynapseOff, {30,48}, {0,1}, 15)
  set_stone("st-glass1",30,61)
  draw_func(ImpulseH, {30,56}, {0,2}, 3)
  set_stone("st-wood",30,64)
  set_stone("st-bolder-n",30,62)
  enigma.KillStone (30,63)
  enigma.KillStone (30,47)
end
function Synapsek()
  draw_func(SynapseOff, {28,48}, {0,1}, 15)
  set_stone("st-glass1",28,61)
  draw_func(ImpulseH, {28,54}, {0,2}, 4)
  set_stone("st-wood",28,64)
  set_stone("st-bolder-n",28,62)
  enigma.KillStone (28,63)
  enigma.KillStone (28,47)
end
function Synapsel()
  draw_func(SynapseOff, {26,48}, {0,1}, 15)
  set_stone("st-glass1",26,61)
  draw_func(ImpulseH, {26,52}, {0,2}, 5)
  set_stone("st-wood",26,64)
  set_stone("st-bolder-n",26,62)
  enigma.KillStone (26,63)
  enigma.KillStone (26,47)
end
function Synapsem()
  draw_func(SynapseOff, {24,48}, {0,1}, 15)
  set_stone("st-glass1",24,61)
  draw_func(ImpulseH, {24,50}, {0,2}, 6)
  set_stone("st-wood",24,64)
  set_stone("st-bolder-n",24,62)
  enigma.KillStone (24,63)
  enigma.KillStone (24,47)
end
function Synapsen()
  draw_func(SynapseOff, {22,48}, {0,1}, 15)
  set_stone("st-glass1",22,61)
  draw_func(ImpulseH, {22,48}, {0,2}, 7)
  set_stone("st-wood",22,64)
  set_stone("st-bolder-n",22,62)
  enigma.KillStone (22,63)
  enigma.KillStone (22,47)
end

function CornerO()
--  draw_func(SynapseOn, {39,77}, {1,0}, 0) -- horizontal
  draw_func(SynapseOn, {39,63}, {0,1}, 15) -- vertical
  enigma.KillStone (39,64)
    if (not difficult) then
      set_stone("st-glass3",39,60)
    else
      draw_func(Blocker, {39,60}, {2,0}, 7)
    end
end
function CornerP()
  draw_func(SynapseOn, {39,75}, {1,0}, 2) -- horizontal
  draw_func(SynapseOn, {41,63}, {0,1}, 13) -- vertical
  enigma.KillStone (41,64)
    if (not difficult) then
      set_stone("st-glass3",41,60)
    else
      draw_func(Blocker, {39,60}, {2,0}, 7)
    end
end
function CornerQ()
  draw_func(SynapseOn, {39,73}, {1,0}, 4) -- horizontal
  draw_func(SynapseOn, {43,63}, {0,1}, 11) -- vertical
  enigma.KillStone (43,64)
    if (not difficult) then
      set_stone("st-glass3",43,60)
    else
      draw_func(Blocker, {39,60}, {2,0}, 7)
    end
end
function CornerR()
  draw_func(SynapseOn, {39,71}, {1,0}, 6) -- horizontal
  draw_func(SynapseOn, {45,63}, {0,1}, 9) -- vertical
  enigma.KillStone (45,64)
    if (not difficult) then
      set_stone("st-glass3",45,60)
    else
      draw_func(Blocker, {39,60}, {2,0}, 7)
    end
end
function CornerS()
  draw_func(SynapseOn, {39,69}, {1,0}, 8) -- horizontal
  draw_func(SynapseOn, {47,63}, {0,1}, 7) -- vertical
  enigma.KillStone (47,64)
    if (not difficult) then
      set_stone("st-glass3",47,60)
    else
      draw_func(Blocker, {39,60}, {2,0}, 7)
    end
end
function CornerT()
  draw_func(SynapseOn, {39,67}, {1,0}, 10) -- horizontal
  draw_func(SynapseOn, {49,63}, {0,1}, 5) -- vertical
  enigma.KillStone (49,64)
    if (not difficult) then
      set_stone("st-glass3",49,60)
    else
      draw_func(Blocker, {39,60}, {2,0}, 7)
    end
end
function CornerU()
  draw_func(SynapseOn, {39,65}, {1,0}, 12) -- horizontal
  draw_func(SynapseOn, {51,63}, {0,1}, 3) -- vertical
  enigma.KillStone (51,64)
    if (not difficult) then
      set_stone("st-glass3",51,60)
    else
      draw_func(Blocker, {39,60}, {2,0}, 7)
    end
end

function Cornero()
--  draw_func(SynapseOff, {39,77}, {1,0}, 0) -- horizontal
  draw_func(SynapseOff, {39,63}, {0,1}, 15) -- vertical
  set_stone("st-glass1",39,64)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",39,60)
    else
      draw_func(ImpulseH, {39,60}, {2,0}, 7)
    end

  set_stone("st-wood",39,61)
  set_stone("st-bolder-s",39,63)
  enigma.KillStone (39,62)
  enigma.KillStone (38,77)
end

function Cornerp()
  draw_func(SynapseOff, {39,75}, {1,0}, 2) -- horizontal
  draw_func(SynapseOff, {41,63}, {0,1}, 13) -- vertical
  set_stone("st-glass1",41,64)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",41,60)
    else
      draw_func(ImpulseH, {39,60}, {2,0}, 7)
    end

  set_stone("st-wood",41,61)
  set_stone("st-bolder-s",41,63)
  enigma.KillStone (41,62)
  enigma.KillStone (38,75)
end

function Cornerq()
  draw_func(SynapseOff, {39,73}, {1,0}, 4) -- horizontal
  draw_func(SynapseOff, {43,63}, {0,1}, 11) -- vertical
  set_stone("st-glass1",43,64)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",43,60)
    else
      draw_func(ImpulseH, {39,60}, {2,0}, 7)
    end

  set_stone("st-wood",43,61)
  set_stone("st-bolder-s",43,63)
  enigma.KillStone (43,62)
  enigma.KillStone (38,73)
end

function Cornerr()
  draw_func(SynapseOff, {39,71}, {1,0}, 6) -- horizontal
  draw_func(SynapseOff, {45,63}, {0,1}, 9) -- vertical
  set_stone("st-glass1",45,64)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",45,60)
    else
      draw_func(ImpulseH, {39,60}, {2,0}, 7)
    end

  set_stone("st-wood",45,61)
  set_stone("st-bolder-s",45,63)
  enigma.KillStone (45,62)
  enigma.KillStone (38,71)
end

function Corners()
  draw_func(SynapseOff, {39,69}, {1,0}, 8) -- horizontal
  draw_func(SynapseOff, {47,63}, {0,1}, 7) -- vertical
  set_stone("st-glass1",47,64)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",47,60)
    else
      draw_func(ImpulseH, {39,60}, {2,0}, 7)
    end

  set_stone("st-wood",47,61)
  set_stone("st-bolder-s",47,63)
  enigma.KillStone (47,62)
  enigma.KillStone (38,69)
end

function Cornert()
  draw_func(SynapseOff, {39,67}, {1,0}, 10) -- horizontal
  draw_func(SynapseOff, {49,63}, {0,1}, 5) -- vertical
  set_stone("st-glass1",49,64)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",49,60)
    else
      draw_func(ImpulseH, {39,60}, {2,0}, 7)
    end

  set_stone("st-wood",49,61)
  set_stone("st-bolder-s",49,63)
  enigma.KillStone (49,62)
  enigma.KillStone (38,67)
end

function Corneru()
  draw_func(SynapseOff, {39,65}, {1,0}, 12) -- horizontal
  draw_func(SynapseOff, {51,63}, {0,1}, 3) -- vertical
  set_stone("st-glass1",51,64)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",51,60)
    else
      draw_func(ImpulseH, {39,60}, {2,0}, 7)
    end

  set_stone("st-wood",51,61)
  set_stone("st-bolder-s",51,63)
  enigma.KillStone (51,62)
  enigma.KillStone (38,65)
end

function Corner1()
--  draw_func(SynapseOn, {19,7}, {1,0}, 0) -- horizontal
  draw_func(SynapseOn, {18,7}, {0,1}, 15) -- vertical
  enigma.KillStone (18,20)
    if (not difficult) then
      set_stone("st-glass3",18,24)
    else
      draw_func(Blocker, {6,24}, {2,0}, 7)
    end
end
function Corner2()
  draw_func(SynapseOn, {17,9}, {1,0}, 2) -- horizontal
  draw_func(SynapseOn, {16,9}, {0,1}, 13) -- vertical
  enigma.KillStone (16,20)
    if (not difficult) then
      set_stone("st-glass3",16,24)
    else
      draw_func(Blocker, {6,24}, {2,0}, 7)
    end
end
function Corner3()
  draw_func(SynapseOn, {15,11}, {1,0}, 4) -- horizontal
  draw_func(SynapseOn, {14,11}, {0,1}, 11) -- vertical
  enigma.KillStone (14,20)
    if (not difficult) then
      set_stone("st-glass3",14,24)
    else
      draw_func(Blocker, {6,24}, {2,0}, 7)
    end
end
function Corner4()
  draw_func(SynapseOn, {13,13}, {1,0}, 6) -- horizontal
  draw_func(SynapseOn, {12,13}, {0,1}, 9) -- vertical
  enigma.KillStone (12,20)
    if (not difficult) then
      set_stone("st-glass3",12,24)
    else
      draw_func(Blocker, {6,24}, {2,0}, 7)
    end
end
function Corner5()
  draw_func(SynapseOn, {11,15}, {1,0}, 8) -- horizontal
  draw_func(SynapseOn, {10,15}, {0,1}, 7) -- vertical
  enigma.KillStone (10,20)
    if (not difficult) then
      set_stone("st-glass3",10,24)
    else
      draw_func(Blocker, {6,24}, {2,0}, 7)
    end
end
function Corner6()
  draw_func(SynapseOn, {9,17}, {1,0}, 10) -- horizontal
  draw_func(SynapseOn, {8,17}, {0,1}, 5) -- vertical
  enigma.KillStone (8,20)
    if (not difficult) then
      set_stone("st-glass3",8,24)
    else
      draw_func(Blocker, {6,24}, {2,0}, 7)
    end
end
function Corner7()
  draw_func(SynapseOn, {7,19}, {1,0}, 12) -- horizontal
  draw_func(SynapseOn, {6,19}, {0,1}, 3) -- vertical
  enigma.KillStone (6,20)
    if (not difficult) then
      set_stone("st-glass3",6,24)
    else
      draw_func(Blocker, {6,24}, {2,0}, 7)
    end
end


function Corner11()
--  draw_func(SynapseOff, {19,7}, {1,0}, 0) -- horizontal
  draw_func(SynapseOff, {18,7}, {0,1}, 15) -- vertical
  set_stone("st-glass1",18,20)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",18,24)
    else
      draw_func(ImpulseH, {6,24}, {2,0}, 7)
    end

  set_stone("st-wood",18,23)
  set_stone("st-bolder-n",18,21)
  enigma.KillStone (18,22)
  enigma.KillStone (19,7)
end

function Corner22()
  draw_func(SynapseOff, {17,9}, {1,0}, 2) -- horizontal
  draw_func(SynapseOff, {16,9}, {0,1}, 13) -- vertical
  set_stone("st-glass1",16,20)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",16,24)
    else
      draw_func(ImpulseH, {6,24}, {2,0}, 7)
    end

  set_stone("st-wood",16,23)
  set_stone("st-bolder-n",16,21)
  enigma.KillStone (16,22)
  enigma.KillStone (19,9)
end

function Corner33()
  draw_func(SynapseOff, {15,11}, {1,0}, 4) -- horizontal
  draw_func(SynapseOff, {14,11}, {0,1}, 11) -- vertical
  set_stone("st-glass1",14,20)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",14,24)
    else
      draw_func(ImpulseH, {6,24}, {2,0}, 7)
    end

  set_stone("st-wood",14,23)
  set_stone("st-bolder-n",14,21)
  enigma.KillStone (14,22)
  enigma.KillStone (19,11)
end

function Corner44()
  draw_func(SynapseOff, {13,13}, {1,0}, 6) -- horizontal
  draw_func(SynapseOff, {12,13}, {0,1}, 9) -- vertical
  set_stone("st-glass1",12,20)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",12,24)
    else
      draw_func(ImpulseH, {6,24}, {2,0}, 7)
    end

  set_stone("st-wood",12,23)
  set_stone("st-bolder-n",12,21)
  enigma.KillStone (12,22)
  enigma.KillStone (19,13)
end

function Corner55()
  draw_func(SynapseOff, {11,15}, {1,0}, 8) -- horizontal
  draw_func(SynapseOff, {10,15}, {0,1}, 7) -- vertical
  set_stone("st-glass1",10,20)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",10,24)
    else
      draw_func(ImpulseH, {6,24}, {2,0}, 7)
    end

  set_stone("st-wood",10,23)
  set_stone("st-bolder-n",10,21)
  enigma.KillStone (10,22)
  enigma.KillStone (19,15)
end

function Corner66()
  draw_func(SynapseOff, {9,17}, {1,0}, 10) -- horizontal
  draw_func(SynapseOff, {8,17}, {0,1}, 5) -- vertical
  set_stone("st-glass1",8,20)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",8,24)
    else
      draw_func(ImpulseH, {6,24}, {2,0}, 7)
    end

  set_stone("st-wood",8,23)
  set_stone("st-bolder-n",8,21)
  enigma.KillStone (8,22)
  enigma.KillStone (19,17)
end

function Corner77()
  draw_func(SynapseOff, {7,19}, {1,0}, 12) -- horizontal
  draw_func(SynapseOff, {6,19}, {0,1}, 3) -- vertical
  set_stone("st-glass1",6,20)
    if (not difficult) then
      set_stone("st-stoneimpulse-hollow",6,24)
    else
      draw_func(ImpulseH, {6,24}, {2,0}, 7)
    end
  set_stone("st-wood",6,23)
  set_stone("st-bolder-n",6,21)
  enigma.KillStone (6,22)
  enigma.KillStone (19,19)
end
    ]]></el:luamain>
    <el:i18n>
      <el:string el:key="title">
        <el:english el:translate="false"/>
      </el:string>
      <el:string el:key="text1">
        <el:english el:translate="true">Bridge those synapses!</el:english>
      </el:string>
    </el:i18n>
  </el:protected>
</el:level>


Building Enigma under MacOS X 106, 10.5, and 10.4

Overview:
---------

Due to which machines are available to Enigma developers, the latest
version of Enigma has only been built under MacOS X 10.6. The
instructions for building should apply identically under 10.4 and 10.5.
The latest SDL library package no longer supports earlier versions of
Mac OS and so Enigma has dropped support for 10.3 or earlier.
Note that even though the build process is not run under Xcode,
it does require that Xcode, which includes a number of developer tools,
has been installed on the build machine.

Enigma is built from the command line using make. There is a make
target that will create a Mac OS application bundle in a compressed
disk image file, enigma.dmg. That file can be copied to a Mac without
any special runtime environment having to be installed, and the Enigma
app simply dropped into a folder to be ready to run. The following
instructions allow you to build a universal binary that will run
on both PowerPc and Intel Macs running MacOS 10.4 or later.

You do need some other packages installed in order to build Enigma on
your MacOS X system. Earlier versions of this README used packages
installed from Macports. That is no longer necessary.

Step 1: Install libjpeg and libpng downloaded from
http://ethan.tira-thompson.org/Mac_OS_X_Ports.html
Download the combined package dmg file from that page, open it in
Finder and double click on the mpkg installation file.

Step 2: Download the xerces-c precompiled binaries for MacOS 10.4
both Intel and PPC from http://xerces.apache.org/xerces-c/download.cgi
Each of them will contain a lib/libxerces-c.a file. Use lipo to combine
them into one universal binary file. For example, if you put the files into
separate directories named ppc and x86 and wanted to create the universal
binary in the current directory, the command line would look like 

 lipo -create ppc/libxerces-c.a x86/libxerces-c.a -output libxerces-c.a

Put the universal binary of libxerces-c.a in /usr/local/lib/

Copy the include directory contents from the download to /usr/local/include/
and the pkgconfig directory contents to /usr/local/lib/pkgconfig/
You can use either the PPC or Intel version as they are the same.

Step 3 Install SDL frameworks: Download the binary packages for Mac OS
X from the SDL project web site for the current stable version of SDL
(SDL 1.2 at the time of this writing. Enigma does not yet support SDL 1.3),
SDL_image, SDL_ttf, and SDL_mixer. The four URLs to find them are:

http://www.libsdl.org/
http://www.libsdl.org/projects/SDL_image/
http://www.libsdl.org/projects/SDL_ttf/
http://www.libsdl.org/projects/SDL_mixer/

Each download is a dmg file that when opened contains a Framework
directory, e.g., SDL.framework. Copy each of those directories into
/Library/Frameworks/ to install it.

Step 4. Install gettext in /usr/local as a universal binary
 a) Download the latest source tarball of gettext from
http://www.gnu.org/software/gettext/#TOCdownloading
 b) Untar it into a convenient directory for building it.
 c) Build it using the following shell script. If you name the file
for example builduniversal.sh, make it executable and put it in 
your path, you would cd to the root directory
of the source tarball you unpacked and use the command lines

  builduniversal.sh
  make
  sudo make install

Here is the contents of builduniversal.sh:

#!/bin/sh
# build a package for universal 10.4+ if it is configured in standard way
# does the configure and make but not the make install
# You can add arguments to be passed to configure
# You can pass in prefix values in CFLAGS, CXXFLAGS, LDFLAGS environment variables
MACOSX_DEPLOYMENT_TARGET=10.4 \
UNIFLAGS="-isysroot /Developer/SDKs/MacOSX10.4u.sdk -mmacosx-version-min=10.4 -arch i386 -arch ppc" \
CC=/usr/bin/gcc-4.0 \
CXX=/usr/bin/g++-4.0 \
CFLAGS="$CFLAGS $UNIFLAGS" \
CXXFLAGS="$CXXFLAGS $NIFLAGS" \
LDFLAGS="$LDFLAGS $UNIFLAGS  -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk" \
./configure --disable-dependency-tracking $*

Step 5. Install SDL packages from source
The build process requires the SDL libraries to be installed in /usr/local
in addition to the frameworks you installed in step 3.
 a) Download the source file tarballs from the same web pages you downloaded the frameworks.
 b) Unpack the tarballs in some convenient directory for building them
 c) Building SDL is a bit complicated to get a universal build. It comes with a
   script for doing so build-scripts/fatbuild.sh, but the version included with
   SDL-1.2.14 is buggy. You have to replace it with one downloaded from the
   bug report about it: http://bugzilla.libsdl.org/attachment.cgi?id=453
   Remember to chmod +x the file after you download it to make it executable.
   It is an attachment to bug report http://bugzilla.libsdl.org/show_bug.cgi?id=867
   Once you have the proper fatbuild.sh in place to build SDL you run

     build-scripts/fatbuild.sh
     sudo build-scripts/fatbuild.sh install

 d) Build SDL_image, SDL_mixer, and SDL_ttf using  builduniversal.sh and sudo make install
    just like you did with gettext

Step 6. Install ImageMagick (required to build the documentation)
Download the ImageMagick binaries from
http://www.imagemagick.org/script/binary-releases.php#macosx
and install according to the directions there.
IMPORTANT: Be sure to export MAGICK_HOME as described there,

Step 7 Build Enigma:

Important: The configure step requires you to be logged in with access
to the window system, i.e., either at the Mac keyboard or using remote
screen sharing, and in a Terminal.app comand line. It will hang trying
to test the SDL library if you are using ssh to log in remotely with no
GUI screen.

At the Terminal.app command line, set up your environment with the following

export MACOSX_DEPLOYMENT_TARGET=10.4

Then cd to the Enigma directory tree and
run the following commands which make use of the builduniversal.sh
script file that was listed in step 4.

./autogen.sh
CFLAGS="-I/usr/local/include" CXXFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" builduniversal.sh
make gmo
make
make macapp

That's it! If it all works, there will be a copy of enigma.dmg in the
etc/ subdirectory and a copy of Enigma.app in etc/macfiles/
subdirectory.
